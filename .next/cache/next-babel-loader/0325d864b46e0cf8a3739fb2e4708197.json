{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\Projects\\\\chnorris\\\\pages\\\\best-jokes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nfunction BestJokes(_ref) {\n  var stars = _ref.stars;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"The Best Jokes for Chuck Norris\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, stars.map(function (star) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, star.joke);\n  })));\n}\n\nBestJokes.getInitialProps = function _callee(_ref2) {\n  var req, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('http://api.icndb.com/jokes/random/30'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            stars: json.value\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BestJokes;","map":{"version":3,"sources":["D:/Projects/chnorris/pages/best-jokes.js"],"names":["fetch","BestJokes","stars","map","star","joke","getInitialProps","req","res","json","value"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,SAAT,OAA4B;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAC1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,KAAK,CAACC,GAAN,CAAW,UAACC,IAAD,EAAW;AAAE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CAAP;AAA6B,GAArD,CADJ,CAFF,CADF;AASD;;AAEDJ,SAAS,CAACK,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AAAA;AAAA,2CACRP,KAAK,CAAC,sCAAD,CADG;;AAAA;AACpBQ,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBA,UAAAA,IAFoB;AAAA,2CAInB;AAAEP,YAAAA,KAAK,EAAEO,IAAI,CAACC;AAAd,WAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAOA,eAAeT,SAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nfunction BestJokes({stars}) {\r\n  return (\r\n    <div>\r\n      <p>The Best Jokes for Chuck Norris</p>\r\n      <ul>\r\n        { stars.map( (star)  => { return <li>{star.joke}</li> }) }\r\n      </ul>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nBestJokes.getInitialProps = async ({ req }) => {\r\n  const res = await fetch('http://api.icndb.com/jokes/random/30')\r\n  const json = await res.json()\r\n\r\n  return { stars: json.value }\r\n}\r\n\r\nexport default BestJokes"]},"metadata":{},"sourceType":"module"}